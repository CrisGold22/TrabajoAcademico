----------------------------------------------------------------------
-- PROCEDURES DB2 PARA REDCOM
-- Formato:
--   - SELECT/LISTAR: READS SQL DATA + cursor WITH RETURN
--   - INSERT/UPDATE/DELETE: MODIFIES SQL DATA
--   - Identidades: IDENTITY_VAL_LOCAL() a OUT param
----------------------------------------------------------------------

----------------------------
-- 1) CAT√ÅLOGOS / ENUMS
----------------------------

-- TIPO_CATEGORIA (ID INT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarTipoCategoria(
  IN p_nombre VARCHAR(50),
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO TIPO_CATEGORIA (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarTipoCategoria(
  IN p_id INTEGER,
  IN p_nombre VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE TIPO_CATEGORIA SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarTipoCategoria(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM TIPO_CATEGORIA WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarTipoCategoriaPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM TIPO_CATEGORIA WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarTipoCategorias()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM TIPO_CATEGORIA;
  OPEN c;
END;

-- UNIDAD_MEDIDA (ID INT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarUnidadMedida(
  IN p_nombre VARCHAR(50),
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO UNIDAD_MEDIDA (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarUnidadMedida(
  IN p_id INTEGER,
  IN p_nombre VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE UNIDAD_MEDIDA SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarUnidadMedida(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM UNIDAD_MEDIDA WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarUnidadMedidaPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM UNIDAD_MEDIDA WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarUnidadesMedida()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM UNIDAD_MEDIDA;
  OPEN c;
END;

-- GENERO (ID SMALLINT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarGenero(
  IN p_nombre VARCHAR(30),
  OUT p_id_generado SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO GENERO (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarGenero(
  IN p_id SMALLINT,
  IN p_nombre VARCHAR(30)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE GENERO SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarGenero(IN p_id SMALLINT)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM GENERO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarGeneroPorId(IN p_id SMALLINT)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM GENERO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarGeneros()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM GENERO;
  OPEN c;
END;

-- CARGO (ID SMALLINT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarCargo(
  IN p_nombre VARCHAR(50),
  OUT p_id_generado SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO CARGO (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarCargo(
  IN p_id SMALLINT,
  IN p_nombre VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE CARGO SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarCargo(IN p_id SMALLINT)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM CARGO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarCargoPorId(IN p_id SMALLINT)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM CARGO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarCargos()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM CARGO;
  OPEN c;
END;

-- JERARQUIA (ID SMALLINT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarJerarquia(
  IN p_nombre VARCHAR(30),
  OUT p_id_generado SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO JERARQUIA (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarJerarquia(
  IN p_id SMALLINT,
  IN p_nombre VARCHAR(30)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE JERARQUIA SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarJerarquia(IN p_id SMALLINT)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM JERARQUIA WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarJerarquiaPorId(IN p_id SMALLINT)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM JERARQUIA WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarJerarquias()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM JERARQUIA;
  OPEN c;
END;

-- CATEGORIA_CLIENTE (ID INT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarCategoriaCliente(
  IN p_nombre VARCHAR(50),
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO CATEGORIA_CLIENTE (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarCategoriaCliente(
  IN p_id INTEGER,
  IN p_nombre VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE CATEGORIA_CLIENTE SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarCategoriaCliente(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM CATEGORIA_CLIENTE WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarCategoriaClientePorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM CATEGORIA_CLIENTE WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarCategoriasCliente()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM CATEGORIA_CLIENTE;
  OPEN c;
END;

-- DISTRITO (ID INT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarDistrito(
  IN p_nombre VARCHAR(50),
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO DISTRITO (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarDistrito(
  IN p_id INTEGER,
  IN p_nombre VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE DISTRITO SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarDistrito(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM DISTRITO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarDistritoPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM DISTRITO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarDistritos()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM DISTRITO;
  OPEN c;
END;

-- ESTADO_CARRITO (ID SMALLINT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarEstadoCarrito(
  IN p_nombre VARCHAR(50),
  OUT p_id_generado SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO ESTADO_CARRITO (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarEstadoCarrito(
  IN p_id SMALLINT,
  IN p_nombre VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE ESTADO_CARRITO SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarEstadoCarrito(IN p_id SMALLINT)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM ESTADO_CARRITO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarEstadoCarritoPorId(IN p_id SMALLINT)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM ESTADO_CARRITO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarEstadosCarrito()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM ESTADO_CARRITO;
  OPEN c;
END;

-- ESTADO_ORDEN_COMPRA (ID SMALLINT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarEstadoOrdenCompra(
  IN p_nombre VARCHAR(50),
  OUT p_id_generado SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO ESTADO_ORDEN_COMPRA (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarEstadoOrdenCompra(
  IN p_id SMALLINT,
  IN p_nombre VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE ESTADO_ORDEN_COMPRA SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarEstadoOrdenCompra(IN p_id SMALLINT)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM ESTADO_ORDEN_COMPRA WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarEstadoOrdenCompraPorId(IN p_id SMALLINT)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM ESTADO_ORDEN_COMPRA WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarEstadosOrdenCompra()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM ESTADO_ORDEN_COMPRA;
  OPEN c;
END;

-- MEDIA_AL_MAYOR (ID SMALLINT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarMediaAlMayor(
  IN p_nombre VARCHAR(50),
  OUT p_id_generado SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO MEDIA_AL_MAYOR (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarMediaAlMayor(
  IN p_id SMALLINT,
  IN p_nombre VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE MEDIA_AL_MAYOR SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarMediaAlMayor(IN p_id SMALLINT)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM MEDIA_AL_MAYOR WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarMediaAlMayorPorId(IN p_id SMALLINT)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM MEDIA_AL_MAYOR WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarMediasAlMayor()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM MEDIA_AL_MAYOR;
  OPEN c;
END;

-- METODO_PAGO (ID SMALLINT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarMetodoPago(
  IN p_nombre VARCHAR(50),
  OUT p_id_generado SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO METODO_PAGO (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarMetodoPago(
  IN p_id SMALLINT,
  IN p_nombre VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE METODO_PAGO SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarMetodoPago(IN p_id SMALLINT)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM METODO_PAGO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarMetodoPagoPorId(IN p_id SMALLINT)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM METODO_PAGO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarMetodosPago()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM METODO_PAGO;
  OPEN c;
END;

-- TIPO_DESCUENTO (ID SMALLINT, NOMBRE)
CREATE OR REPLACE PROCEDURE insertarTipoDescuento(
  IN p_nombre VARCHAR(50),
  OUT p_id_generado SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO TIPO_DESCUENTO (NOMBRE) VALUES (p_nombre);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarTipoDescuento(
  IN p_id SMALLINT,
  IN p_nombre VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE TIPO_DESCUENTO SET NOMBRE = p_nombre WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarTipoDescuento(IN p_id SMALLINT)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM TIPO_DESCUENTO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarTipoDescuentoPorId(IN p_id SMALLINT)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM TIPO_DESCUENTO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarTiposDescuento()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM TIPO_DESCUENTO;
  OPEN c;
END;


----------------------------
-- 2) ENTIDADES PRINCIPALES
----------------------------

-- PERSONA
CREATE OR REPLACE PROCEDURE insertarPersona(
  IN p_dni VARCHAR(15),
  IN p_nombre VARCHAR(100),
  IN p_apellido_paterno VARCHAR(100),
  IN p_apellido_materno VARCHAR(100),
  IN p_telefono INTEGER,
  IN p_fecha_nacimiento DATE,
  IN p_rango_jerarquia_id SMALLINT,
  IN p_genero_id SMALLINT,
  IN p_activo SMALLINT,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO PERSONA (
    DNI, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, TELEFONO,
    FECHA_NACIMIENTO, RANGO_JERARQUIA_ID, GENERO_ID, ACTIVO
  ) VALUES (
    p_dni, p_nombre, p_apellido_paterno, p_apellido_materno, p_telefono,
    p_fecha_nacimiento, p_rango_jerarquia_id, p_genero_id, p_activo
  );
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarPersona(
  IN p_id INTEGER,
  IN p_dni VARCHAR(15),
  IN p_nombre VARCHAR(100),
  IN p_apellido_paterno VARCHAR(100),
  IN p_apellido_materno VARCHAR(100),
  IN p_telefono INTEGER,
  IN p_fecha_nacimiento DATE,
  IN p_rango_jerarquia_id SMALLINT,
  IN p_genero_id SMALLINT,
  IN p_activo SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE PERSONA
  SET DNI = p_dni,
      NOMBRE = p_nombre,
      APELLIDO_PATERNO = p_apellido_paterno,
      APELLIDO_MATERNO = p_apellido_materno,
      TELEFONO = p_telefono,
      FECHA_NACIMIENTO = p_fecha_nacimiento,
      RANGO_JERARQUIA_ID = p_rango_jerarquia_id,
      GENERO_ID = p_genero_id,
      ACTIVO = p_activo
  WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarPersona(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM PERSONA WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarPersonaPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM PERSONA WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE buscarPersonaPorDni(IN p_dni VARCHAR(15))
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM PERSONA WHERE DNI = p_dni;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarPersonas()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM PERSONA;
  OPEN c;
END;

-- CUENTA_USUARIO
CREATE OR REPLACE PROCEDURE insertarCuentaUsuario(
  IN p_user_name VARCHAR(50),
  IN p_password VARCHAR(100),
  IN p_persona_id INTEGER,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO CUENTA_USUARIO (USER_NAME, PASSWORD, PERSONA_ID)
  VALUES (p_user_name, p_password, p_persona_id);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarCuentaUsuario(
  IN p_id INTEGER,
  IN p_user_name VARCHAR(50),
  IN p_password VARCHAR(100),
  IN p_persona_id INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE CUENTA_USUARIO
     SET USER_NAME = p_user_name,
         PASSWORD = p_password,
         PERSONA_ID = p_persona_id
   WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarCuentaUsuario(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM CUENTA_USUARIO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarCuentaUsuarioPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM CUENTA_USUARIO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarCuentasUsuario()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM CUENTA_USUARIO;
  OPEN c;
END;

-- ADMINISTRADOR_SISTEMA (PK = PERSONA_ID)
CREATE OR REPLACE PROCEDURE insertarAdministradorSistema(
  IN p_persona_id INTEGER,
  IN p_cargo_id SMALLINT,
  IN p_salario DOUBLE
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO ADMINISTRADOR_SISTEMA (PERSONA_ID, CARGO_ID, SALARIO)
  VALUES (p_persona_id, p_cargo_id, p_salario);
END;

CREATE OR REPLACE PROCEDURE modificarAdministradorSistema(
  IN p_persona_id INTEGER,
  IN p_cargo_id SMALLINT,
  IN p_salario DOUBLE
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE ADMINISTRADOR_SISTEMA
     SET CARGO_ID = p_cargo_id,
         SALARIO = p_salario
   WHERE PERSONA_ID = p_persona_id;
END;

CREATE OR REPLACE PROCEDURE eliminarAdministradorSistema(IN p_persona_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM ADMINISTRADOR_SISTEMA WHERE PERSONA_ID = p_persona_id;
END;

CREATE OR REPLACE PROCEDURE buscarAdministradorSistemaPorId(IN p_persona_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM ADMINISTRADOR_SISTEMA WHERE PERSONA_ID = p_persona_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarAdministradoresSistema()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM ADMINISTRADOR_SISTEMA;
  OPEN c;
END;

-- CLIENTE (PK = PERSONA_ID)
CREATE OR REPLACE PROCEDURE insertarCliente(
  IN p_persona_id INTEGER,
  IN p_linea_credito DOUBLE,
  IN p_categoria_id INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO CLIENTE (PERSONA_ID, LINEA_CREDITO, CATEGORIA_ID)
  VALUES (p_persona_id, p_linea_credito, p_categoria_id);
END;

CREATE OR REPLACE PROCEDURE modificarCliente(
  IN p_persona_id INTEGER,
  IN p_linea_credito DOUBLE,
  IN p_categoria_id INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE CLIENTE
     SET LINEA_CREDITO = p_linea_credito,
         CATEGORIA_ID = p_categoria_id
   WHERE PERSONA_ID = p_persona_id;
END;

CREATE OR REPLACE PROCEDURE eliminarCliente(IN p_persona_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM CLIENTE WHERE PERSONA_ID = p_persona_id;
END;

CREATE OR REPLACE PROCEDURE buscarClientePorId(IN p_persona_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM CLIENTE WHERE PERSONA_ID = p_persona_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarClientes()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM CLIENTE;
  OPEN c;
END;

-- CATEGORIA_PRODUCTO
CREATE OR REPLACE PROCEDURE insertarCategoriaProducto(
  IN p_nombre VARCHAR(100),
  IN p_descripcion VARCHAR(255),
  IN p_tipo_categoria_id INTEGER,
  IN p_activo SMALLINT,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO CATEGORIA_PRODUCTO (NOMBRE, DESCRIPCION, TIPO_CATEGORIA_ID, ACTIVO)
  VALUES (p_nombre, p_descripcion, p_tipo_categoria_id, p_activo);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarCategoriaProducto(
  IN p_id INTEGER,
  IN p_nombre VARCHAR(100),
  IN p_descripcion VARCHAR(255),
  IN p_tipo_categoria_id INTEGER,
  IN p_activo SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE CATEGORIA_PRODUCTO
     SET NOMBRE = p_nombre,
         DESCRIPCION = p_descripcion,
         TIPO_CATEGORIA_ID = p_tipo_categoria_id,
         ACTIVO = p_activo
   WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarCategoriaProducto(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM CATEGORIA_PRODUCTO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarCategoriaProductoPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM CATEGORIA_PRODUCTO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarCategoriasProducto()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM CATEGORIA_PRODUCTO;
  OPEN c;
END;

-- PRODUCTO
CREATE OR REPLACE PROCEDURE insertarProducto(
  IN p_sku VARCHAR(50),
  IN p_nombre VARCHAR(100),
  IN p_descripcion VARCHAR(255),
  IN p_precio_unitario DOUBLE,
  IN p_stock_disponible INTEGER,
  IN p_unidad_medida_id INTEGER,
  IN p_categoria_id INTEGER,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO PRODUCTO (
    SKU, NOMBRE, DESCRIPCION, PRECIO_UNITARIO, STOCK_DISPONIBLE,
    UNIDAD_MEDIDA_ID, CATEGORIA_ID
  ) VALUES (
    p_sku, p_nombre, p_descripcion, p_precio_unitario, p_stock_disponible,
    p_unidad_medida_id, p_categoria_id
  );
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarProducto(
  IN p_id INTEGER,
  IN p_sku VARCHAR(50),
  IN p_nombre VARCHAR(100),
  IN p_descripcion VARCHAR(255),
  IN p_precio_unitario DOUBLE,
  IN p_stock_disponible INTEGER,
  IN p_unidad_medida_id INTEGER,
  IN p_categoria_id INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE PRODUCTO
     SET SKU = p_sku,
         NOMBRE = p_nombre,
         DESCRIPCION = p_descripcion,
         PRECIO_UNITARIO = p_precio_unitario,
         STOCK_DISPONIBLE = p_stock_disponible,
         UNIDAD_MEDIDA_ID = p_unidad_medida_id,
         CATEGORIA_ID = p_categoria_id
   WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarProducto(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM PRODUCTO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarProductoPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM PRODUCTO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE buscarProductoPorSku(IN p_sku VARCHAR(50))
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM PRODUCTO WHERE SKU = p_sku;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarProductos()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM PRODUCTO;
  OPEN c;
END;

-- PRECIO_AL_MAYOR
CREATE OR REPLACE PROCEDURE insertarPrecioAlMayor(
  IN p_producto_id INTEGER,
  IN p_medida_al_mayor_id SMALLINT,
  IN p_precio_por_volumen DOUBLE,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO PRECIO_AL_MAYOR (PRODUCTO_ID, MEDIDA_AL_MAYOR_ID, PRECIO_POR_VOLUMEN)
  VALUES (p_producto_id, p_medida_al_mayor_id, p_precio_por_volumen);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarPrecioAlMayor(
  IN p_id INTEGER,
  IN p_producto_id INTEGER,
  IN p_medida_al_mayor_id SMALLINT,
  IN p_precio_por_volumen DOUBLE
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE PRECIO_AL_MAYOR
     SET PRODUCTO_ID = p_producto_id,
         MEDIDA_AL_MAYOR_ID = p_medida_al_mayor_id,
         PRECIO_POR_VOLUMEN = p_precio_por_volumen
   WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarPrecioAlMayor(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM PRECIO_AL_MAYOR WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarPrecioAlMayorPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM PRECIO_AL_MAYOR WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarPreciosAlMayor()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM PRECIO_AL_MAYOR;
  OPEN c;
END;


----------------------------
-- 3) RELACIONES / TRANSACCIONES
----------------------------

-- DESCUENTO_CLIENTE (versi√≥n ORIGINAL con TIPO_DESCUENTO VARCHAR)
-- >>> Usa esta secci√≥n si tu tabla a√∫n TIENE la columna TIPO_DESCUENTO (VARCHAR)
CREATE OR REPLACE PROCEDURE insertarDescuentoCliente_vchar(
  IN p_cliente_id INTEGER,
  IN p_stock_minimo INTEGER,
  IN p_stock_maximo INTEGER,
  IN p_porcentaje_desc DOUBLE,
  IN p_tipo_desc VARCHAR(50),
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO DESCUENTO_CLIENTE (
    CLIENTE_ID, STOCK_MINIMO, STOCK_MAXIMO, PORCENTAJE_DESCUENTO, TIPO_DESCUENTO
  ) VALUES (
    p_cliente_id, p_stock_minimo, p_stock_maximo, p_porcentaje_desc, p_tipo_desc
  );
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarDescuentoCliente_vchar(
  IN p_id INTEGER,
  IN p_cliente_id INTEGER,
  IN p_stock_minimo INTEGER,
  IN p_stock_maximo INTEGER,
  IN p_porcentaje_desc DOUBLE,
  IN p_tipo_desc VARCHAR(50)
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE DESCUENTO_CLIENTE
     SET CLIENTE_ID = p_cliente_id,
         STOCK_MINIMO = p_stock_minimo,
         STOCK_MAXIMO = p_stock_maximo,
         PORCENTAJE_DESCUENTO = p_porcentaje_desc,
         TIPO_DESCUENTO = p_tipo_desc
   WHERE ID = p_id;
END;

-- DESCUENTO_CLIENTE (versi√≥n MIGRADA con TIPO_DESCUENTO_ID SMALLINT)
-- >>> Usa esta secci√≥n si ya agregaste TIPO_DESCUENTO_ID y su FK, y quitaste la columna VARCHAR
CREATE OR REPLACE PROCEDURE insertarDescuentoCliente_fk(
  IN p_cliente_id INTEGER,
  IN p_stock_minimo INTEGER,
  IN p_stock_maximo INTEGER,
  IN p_porcentaje_desc DOUBLE,
  IN p_tipo_descuento_id SMALLINT,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO DESCUENTO_CLIENTE (
    CLIENTE_ID, STOCK_MINIMO, STOCK_MAXIMO, PORCENTAJE_DESCUENTO, TIPO_DESCUENTO_ID
  ) VALUES (
    p_cliente_id, p_stock_minimo, p_stock_maximo, p_porcentaje_desc, p_tipo_descuento_id
  );
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarDescuentoCliente_fk(
  IN p_id INTEGER,
  IN p_cliente_id INTEGER,
  IN p_stock_minimo INTEGER,
  IN p_stock_maximo INTEGER,
  IN p_porcentaje_desc DOUBLE,
  IN p_tipo_descuento_id SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE DESCUENTO_CLIENTE
     SET CLIENTE_ID = p_cliente_id,
         STOCK_MINIMO = p_stock_minimo,
         STOCK_MAXIMO = p_stock_maximo,
         PORCENTAJE_DESCUENTO = p_porcentaje_desc,
         TIPO_DESCUENTO_ID = p_tipo_descuento_id
   WHERE ID = p_id;
END;

-- Comunes a ambas variantes
CREATE OR REPLACE PROCEDURE eliminarDescuentoCliente(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM DESCUENTO_CLIENTE WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarDescuentoClientePorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM DESCUENTO_CLIENTE WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarDescuentosCliente()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM DESCUENTO_CLIENTE;
  OPEN c;
END;


-- CARRITO_COMPRAS
CREATE OR REPLACE PROCEDURE insertarCarrito(
  IN p_cliente_id INTEGER,
  IN p_total_parcial DOUBLE,
  IN p_total_con_descuento DOUBLE,
  IN p_estado_id SMALLINT,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO CARRITO_COMPRAS (CLIENTE_ID, TOTAL_PARCIAL, TOTAL_CON_DESCUENTO, ESTADO_ID)
  VALUES (p_cliente_id, p_total_parcial, p_total_con_descuento, p_estado_id);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarCarrito(
  IN p_id INTEGER,
  IN p_cliente_id INTEGER,
  IN p_total_parcial DOUBLE,
  IN p_total_con_descuento DOUBLE,
  IN p_estado_id SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE CARRITO_COMPRAS
     SET CLIENTE_ID = p_cliente_id,
         TOTAL_PARCIAL = p_total_parcial,
         TOTAL_CON_DESCUENTO = p_total_con_descuento,
         ESTADO_ID = p_estado_id
   WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarCarrito(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM CARRITO_COMPRAS WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarCarritoPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM CARRITO_COMPRAS WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarCarritos()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM CARRITO_COMPRAS;
  OPEN c;
END;

-- LINEA_CARRITO (PK compuesta)
CREATE OR REPLACE PROCEDURE insertarLineaCarrito(
  IN p_carrito_id INTEGER,
  IN p_producto_id INTEGER,
  IN p_cantidad INTEGER,
  IN p_precio_volumen DOUBLE,
  IN p_subtotal DOUBLE
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO LINEA_CARRITO (CARRITO_ID, PRODUCTO_ID, CANTIDAD, PRECIO_VOLUMEN, SUBTOTAL)
  VALUES (p_carrito_id, p_producto_id, p_cantidad, p_precio_volumen, p_subtotal);
END;

CREATE OR REPLACE PROCEDURE modificarLineaCarrito(
  IN p_carrito_id INTEGER,
  IN p_producto_id INTEGER,
  IN p_cantidad INTEGER,
  IN p_precio_volumen DOUBLE,
  IN p_subtotal DOUBLE
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE LINEA_CARRITO
     SET CANTIDAD = p_cantidad,
         PRECIO_VOLUMEN = p_precio_volumen,
         SUBTOTAL = p_subtotal
   WHERE CARRITO_ID = p_carrito_id AND PRODUCTO_ID = p_producto_id;
END;

CREATE OR REPLACE PROCEDURE eliminarLineaCarrito(
  IN p_carrito_id INTEGER,
  IN p_producto_id INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM LINEA_CARRITO
   WHERE CARRITO_ID = p_carrito_id AND PRODUCTO_ID = p_producto_id;
END;

CREATE OR REPLACE PROCEDURE buscarLineaCarrito(
  IN p_carrito_id INTEGER,
  IN p_producto_id INTEGER
)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM LINEA_CARRITO
     WHERE CARRITO_ID = p_carrito_id AND PRODUCTO_ID = p_producto_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarLineasCarritoPorCarrito(IN p_carrito_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM LINEA_CARRITO WHERE CARRITO_ID = p_carrito_id;
  OPEN c;
END;


-- ORDEN_COMPRA
CREATE OR REPLACE PROCEDURE insertarOrdenCompra(
  IN p_cliente_id INTEGER,
  IN p_fecha_creacion DATE,
  IN p_total_parcial DOUBLE,
  IN p_total_final DOUBLE,
  IN p_descuento_total DOUBLE,
  IN p_estado_id SMALLINT,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO ORDEN_COMPRA (
    CLIENTE_ID, FECHA_CREACION, TOTAL_PARCIAL, TOTAL_FINAL, DESCUENTO_TOTAL, ESTADO_ID
  ) VALUES (
    p_cliente_id, p_fecha_creacion, p_total_parcial, p_total_final, p_descuento_total, p_estado_id
  );
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarOrdenCompra(
  IN p_id INTEGER,
  IN p_cliente_id INTEGER,
  IN p_fecha_creacion DATE,
  IN p_total_parcial DOUBLE,
  IN p_total_final DOUBLE,
  IN p_descuento_total DOUBLE,
  IN p_estado_id SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE ORDEN_COMPRA
     SET CLIENTE_ID = p_cliente_id,
         FECHA_CREACION = p_fecha_creacion,
         TOTAL_PARCIAL = p_total_parcial,
         TOTAL_FINAL = p_total_final,
         DESCUENTO_TOTAL = p_descuento_total,
         ESTADO_ID = p_estado_id
   WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarOrdenCompra(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM ORDEN_COMPRA WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarOrdenCompraPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM ORDEN_COMPRA WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarOrdenesCompra()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM ORDEN_COMPRA;
  OPEN c;
END;

-- LINEA_ORDEN_COMPRA (PK compuesta)
CREATE OR REPLACE PROCEDURE insertarLineaOrdenCompra(
  IN p_orden_id INTEGER,
  IN p_producto_id INTEGER,
  IN p_cantidad INTEGER,
  IN p_precio_unitario DOUBLE,
  IN p_subtotal DOUBLE
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO LINEA_ORDEN_COMPRA (ORDEN_ID, PRODUCTO_ID, CANTIDAD, PRECIO_UNITARIO, SUBTOTAL)
  VALUES (p_orden_id, p_producto_id, p_cantidad, p_precio_unitario, p_subtotal);
END;

CREATE OR REPLACE PROCEDURE modificarLineaOrdenCompra(
  IN p_orden_id INTEGER,
  IN p_producto_id INTEGER,
  IN p_cantidad INTEGER,
  IN p_precio_unitario DOUBLE,
  IN p_subtotal DOUBLE
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE LINEA_ORDEN_COMPRA
     SET CANTIDAD = p_cantidad,
         PRECIO_UNITARIO = p_precio_unitario,
         SUBTOTAL = p_subtotal
   WHERE ORDEN_ID = p_orden_id AND PRODUCTO_ID = p_producto_id;
END;

CREATE OR REPLACE PROCEDURE eliminarLineaOrdenCompra(
  IN p_orden_id INTEGER,
  IN p_producto_id INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM LINEA_ORDEN_COMPRA
   WHERE ORDEN_ID = p_orden_id AND PRODUCTO_ID = p_producto_id;
END;

CREATE OR REPLACE PROCEDURE buscarLineaOrdenCompra(
  IN p_orden_id INTEGER,
  IN p_producto_id INTEGER
)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM LINEA_ORDEN_COMPRA
     WHERE ORDEN_ID = p_orden_id AND PRODUCTO_ID = p_producto_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarLineasOrdenCompraPorOrden(IN p_orden_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM LINEA_ORDEN_COMPRA WHERE ORDEN_ID = p_orden_id;
  OPEN c;
END;


-- COMPROBANTE_PAGO
CREATE OR REPLACE PROCEDURE insertarComprobantePago(
  IN p_orden_compra_id INTEGER,
  IN p_fecha_emision DATE,
  IN p_ruc VARCHAR(15),
  IN p_subtotal_sin_impuestos DOUBLE,
  IN p_impuestos DOUBLE,
  IN p_total_final DOUBLE,
  IN p_metodo_pago_id SMALLINT,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO COMPROBANTE_PAGO (
    ORDEN_COMPRA_ID, FECHA_EMISION, RUC, SUBTOTAL_SIN_IMPUESTOS, IMPUESTOS, TOTAL_FINAL, METODO_PAGO_ID
  ) VALUES (
    p_orden_compra_id, p_fecha_emision, p_ruc, p_subtotal_sin_impuestos, p_impuestos, p_total_final, p_metodo_pago_id
  );
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarComprobantePago(
  IN p_id INTEGER,
  IN p_orden_compra_id INTEGER,
  IN p_fecha_emision DATE,
  IN p_ruc VARCHAR(15),
  IN p_subtotal_sin_impuestos DOUBLE,
  IN p_impuestos DOUBLE,
  IN p_total_final DOUBLE,
  IN p_metodo_pago_id SMALLINT
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE COMPROBANTE_PAGO
     SET ORDEN_COMPRA_ID = p_orden_compra_id,
         FECHA_EMISION = p_fecha_emision,
         RUC = p_ruc,
         SUBTOTAL_SIN_IMPUESTOS = p_subtotal_sin_impuestos,
         IMPUESTOS = p_impuestos,
         TOTAL_FINAL = p_total_final,
         METODO_PAGO_ID = p_metodo_pago_id
   WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarComprobantePago(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM COMPROBANTE_PAGO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarComprobantePagoPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM COMPROBANTE_PAGO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarComprobantesPago()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM COMPROBANTE_PAGO;
  OPEN c;
END;


-- LINEA_COMPROBANTE_PAGO
-- Variante ORIGINAL (con ORDEN_COMPRA_ID)
CREATE OR REPLACE PROCEDURE insertarLineaComprobantePago_orden(
  IN p_orden_compra_id INTEGER,
  IN p_codigo VARCHAR(50),
  IN p_monto_pagado DOUBLE,
  IN p_cantidad INTEGER,
  IN p_subtotal DOUBLE,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO LINEA_COMPROBANTE_PAGO (ORDEN_COMPRA_ID, CODIGO, MONTO_PAGADO, CANTIDAD, SUBTOTAL)
  VALUES (p_orden_compra_id, p_codigo, p_monto_pagado, p_cantidad, p_subtotal);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarLineaComprobantePago_orden(
  IN p_id INTEGER,
  IN p_orden_compra_id INTEGER,
  IN p_codigo VARCHAR(50),
  IN p_monto_pagado DOUBLE,
  IN p_cantidad INTEGER,
  IN p_subtotal DOUBLE
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE LINEA_COMPROBANTE_PAGO
     SET ORDEN_COMPRA_ID = p_orden_compra_id,
         CODIGO = p_codigo,
         MONTO_PAGADO = p_monto_pagado,
         CANTIDAD = p_cantidad,
         SUBTOTAL = p_subtotal
   WHERE ID = p_id;
END;

-- Variante NUEVA (con COMPROBANTE_PAGO_ID)
CREATE OR REPLACE PROCEDURE insertarLineaComprobantePago_comprobante(
  IN p_comprobante_pago_id INTEGER,
  IN p_codigo VARCHAR(50),
  IN p_monto_pagado DOUBLE,
  IN p_cantidad INTEGER,
  IN p_subtotal DOUBLE,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO LINEA_COMPROBANTE_PAGO (COMPROBANTE_PAGO_ID, CODIGO, MONTO_PAGADO, CANTIDAD, SUBTOTAL)
  VALUES (p_comprobante_pago_id, p_codigo, p_monto_pagado, p_cantidad, p_subtotal);
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarLineaComprobantePago_comprobante(
  IN p_id INTEGER,
  IN p_comprobante_pago_id INTEGER,
  IN p_codigo VARCHAR(50),
  IN p_monto_pagado DOUBLE,
  IN p_cantidad INTEGER,
  IN p_subtotal DOUBLE
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE LINEA_COMPROBANTE_PAGO
     SET COMPROBANTE_PAGO_ID = p_comprobante_pago_id,
         CODIGO = p_codigo,
         MONTO_PAGADO = p_monto_pagado,
         CANTIDAD = p_cantidad,
         SUBTOTAL = p_subtotal
   WHERE ID = p_id;
END;

-- Comunes
CREATE OR REPLACE PROCEDURE eliminarLineaComprobantePago(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM LINEA_COMPROBANTE_PAGO WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarLineaComprobantePagoPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR
    SELECT * FROM LINEA_COMPROBANTE_PAGO WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarLineasComprobantePago()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM LINEA_COMPROBANTE_PAGO;
  OPEN c;
END;


-- DETALLE_ENTREGA
CREATE OR REPLACE PROCEDURE insertarDetalleEntrega(
  IN p_orden_compra_id INTEGER,
  IN p_descripcion VARCHAR(255),
  IN p_fecha_entrega DATE,
  IN p_horario_entrega TIME,
  IN p_direccion_envio VARCHAR(255),
  IN p_distrito_id INTEGER,
  OUT p_id_generado INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  INSERT INTO DETALLE_ENTREGA (
    ORDEN_COMPRA_ID, DESCRIPCION, FECHA_ENTREGA, HORARIO_ENTREGA, DIRECCION_ENVIO, DISTRITO_ID
  ) VALUES (
    p_orden_compra_id, p_descripcion, p_fecha_entrega, p_horario_entrega, p_direccion_envio, p_distrito_id
  );
  SET p_id_generado = IDENTITY_VAL_LOCAL();
END;

CREATE OR REPLACE PROCEDURE modificarDetalleEntrega(
  IN p_id INTEGER,
  IN p_orden_compra_id INTEGER,
  IN p_descripcion VARCHAR(255),
  IN p_fecha_entrega DATE,
  IN p_horario_entrega TIME,
  IN p_direccion_envio VARCHAR(255),
  IN p_distrito_id INTEGER
)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  UPDATE DETALLE_ENTREGA
     SET ORDEN_COMPRA_ID = p_orden_compra_id,
         DESCRIPCION = p_descripcion,
         FECHA_ENTREGA = p_fecha_entrega,
         HORARIO_ENTREGA = p_horario_entrega,
         DIRECCION_ENVIO = p_direccion_envio,
         DISTRITO_ID = p_distrito_id
   WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE eliminarDetalleEntrega(IN p_id INTEGER)
LANGUAGE SQL MODIFIES SQL DATA
BEGIN
  DELETE FROM DETALLE_ENTREGA WHERE ID = p_id;
END;

CREATE OR REPLACE PROCEDURE buscarDetalleEntregaPorId(IN p_id INTEGER)
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM DETALLE_ENTREGA WHERE ID = p_id;
  OPEN c;
END;

CREATE OR REPLACE PROCEDURE listarDetallesEntrega()
LANGUAGE SQL READS SQL DATA DYNAMIC RESULT SETS 1
BEGIN
  DECLARE c CURSOR WITH RETURN FOR SELECT * FROM DETALLE_ENTREGA;
  OPEN c;
END;
