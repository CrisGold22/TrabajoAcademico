-- ********************************************
-- 1. Tablas de ENUMS / Catálogos
-- ********************************************

-- TipoCategoria (ABARROTES, BEBIDAS, LIMPIEZA, etc.)
CREATE TABLE TIPO_CATEGORIA (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_TIPO_CATEGORIA PRIMARY KEY (ID)
);

-- UnidadMedida (KILOGRAMO, LITRO, BOTELLA, CAJA, etc.)
CREATE TABLE UNIDAD_MEDIDA (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_UNIDAD_MEDIDA PRIMARY KEY (ID)
);

-- Genero (HOMBRE, MUJER, NO ESPECIFICADO)
CREATE TABLE GENERO (
    ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(30) NOT NULL UNIQUE,
    CONSTRAINT PK_GENERO PRIMARY KEY (ID)
);

-- Cargo (ADMINISTRADOR, GESTOR PRODUCTOS, etc.)
CREATE TABLE CARGO (
    ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_CARGO PRIMARY KEY (ID)
);

-- Jerarquia (COMPLETO, PARCIAL)
CREATE TABLE JERARQUIA (
    ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(30) NOT NULL UNIQUE,
    CONSTRAINT PK_JERARQUIA PRIMARY KEY (ID)
);

-- CategoriaCliente (DISTRIBUIDOR, REVENDEDOR, RESTAURANTE, etc.)
CREATE TABLE CATEGORIA_CLIENTE (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_CAT_CLIENTE PRIMARY KEY (ID)
);

-- Distrito (PUEBLO LIBRE, SAN MIGUEL, SAN BORJA, etc.)
CREATE TABLE DISTRITO (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_DISTRITO PRIMARY KEY (ID)
);

-- EstadoCarrito (VACIO, EN PROCESO, CONFIRMADO, etc.)
CREATE TABLE ESTADO_CARRITO (
    ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_ESTADO_CARRITO PRIMARY KEY (ID)
);

-- EstadoOrdenCompra (CREADA, EN PREPARACION, ENVIADO, CANCELADO, etc.)
CREATE TABLE ESTADO_ORDEN_COMPRA (
    ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_ESTADO_ORDEN PRIMARY KEY (ID)
);

-- MediaAlMayor (CUARTO DE DOCENA, MEDIA DOCENA, DOCENA)
CREATE TABLE MEDIA_AL_MAYOR (
    ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_MEDIA_AL_MAYOR PRIMARY KEY (ID)
);

---

-- ********************************************
-- 2. Tablas Principales (Entidades)
-- ********************************************

-- Persona (Clase base)
CREATE TABLE PERSONA (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    DNI VARCHAR(15) UNIQUE NOT NULL, -- Corregido: UNIQUE + NOT NULL
    NOMBRE VARCHAR(100) NOT NULL,
    APELLIDO_PATERNO VARCHAR(100),
    APELLIDO_MATERNO VARCHAR(100),
    TELEFONO INTEGER,
    FECHA_NACIMIENTO DATE,
    RANGO_JERARQUIA_ID SMALLINT NOT NULL,
    GENERO_ID SMALLINT,
    ACTIVO SMALLINT DEFAULT 1, -- Usando SMALLINT para booleano (1=True)
    CONSTRAINT PK_PERSONA PRIMARY KEY (ID),
    CONSTRAINT FK_PERSONA_JERARQUIA FOREIGN KEY (RANGO_JERARQUIA_ID) REFERENCES JERARQUIA (ID),
    CONSTRAINT FK_PERSONA_GENERO FOREIGN KEY (GENERO_ID) REFERENCES GENERO (ID)
);

-- CuentaUsuario (Relación 1-1 con Persona)
CREATE TABLE CUENTA_USUARIO (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    USER_NAME VARCHAR(50) NOT NULL UNIQUE,
    PASSWORD VARCHAR(100) NOT NULL,
    PERSONA_ID INTEGER UNIQUE NOT NULL, -- UNIQUE y NOT NULL para 1-1
    CONSTRAINT PK_CUENTA_USUARIO PRIMARY KEY (ID),
    CONSTRAINT FK_CUENTA_PERSONA FOREIGN KEY (PERSONA_ID) REFERENCES PERSONA (ID) ON DELETE CASCADE
);

-- AdministradorSistema (Subclase de Persona)
CREATE TABLE ADMINISTRADOR_SISTEMA (
    PERSONA_ID INTEGER NOT NULL, -- PK y FK a Persona
    CARGO_ID SMALLINT NOT NULL,
    SALARIO DOUBLE,
    CONSTRAINT PK_ADMIN_SISTEMA PRIMARY KEY (PERSONA_ID),
    CONSTRAINT FK_ADMIN_PERSONA FOREIGN KEY (PERSONA_ID) REFERENCES PERSONA (ID) ON DELETE CASCADE,
    CONSTRAINT FK_ADMIN_CARGO FOREIGN KEY (CARGO_ID) REFERENCES CARGO (ID)
);

-- Cliente (Subclase de Persona)
CREATE TABLE CLIENTE (
    PERSONA_ID INTEGER NOT NULL, -- PK y FK a Persona
    LINEA_CREDITO DOUBLE DEFAULT 0.00,
    CATEGORIA_ID INTEGER NOT NULL,
    CONSTRAINT PK_CLIENTE PRIMARY KEY (PERSONA_ID),
    CONSTRAINT FK_CLIENTE_PERSONA FOREIGN KEY (PERSONA_ID) REFERENCES PERSONA (ID) ON DELETE CASCADE,
    CONSTRAINT FK_CLIENTE_CATEGORIA FOREIGN KEY (CATEGORIA_ID) REFERENCES CATEGORIA_CLIENTE (ID)
);

-- CategoriaProducto
CREATE TABLE CATEGORIA_PRODUCTO (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(100) NOT NULL,
    DESCRIPCION VARCHAR(255),
    TIPO_CATEGORIA_ID INTEGER NOT NULL,
    ACTIVO SMALLINT DEFAULT 1,
    CONSTRAINT PK_CATEGORIA_PROD PRIMARY KEY (ID),
    CONSTRAINT FK_CAT_PROD_TIPO_CAT FOREIGN KEY (TIPO_CATEGORIA_ID) REFERENCES TIPO_CATEGORIA (ID)
);

-- Producto
CREATE TABLE PRODUCTO (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    SKU VARCHAR(50) NOT NULL UNIQUE, -- Corregido: UNIQUE + NOT NULL
    NOMBRE VARCHAR(100) NOT NULL,
    DESCRIPCION VARCHAR(255),
    PRECIO_UNITARIO DOUBLE NOT NULL,
    STOCK_DISPONIBLE INTEGER DEFAULT 0,
    UNIDAD_MEDIDA_ID INTEGER NOT NULL,
    CATEGORIA_ID INTEGER NOT NULL,
    CONSTRAINT PK_PRODUCTO PRIMARY KEY (ID),
    CONSTRAINT FK_PROD_UNIDAD_MEDIDA FOREIGN KEY (UNIDAD_MEDIDA_ID) REFERENCES UNIDAD_MEDIDA (ID),
    CONSTRAINT FK_PROD_CATEGORIA FOREIGN KEY (CATEGORIA_ID) REFERENCES CATEGORIA_PRODUCTO (ID)
);

-- PrecioAlMayor (Relación con Producto y MediaAlMayor)
CREATE TABLE PRECIO_AL_MAYOR (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    PRODUCTO_ID INTEGER NOT NULL,
    MEDIDA_AL_MAYOR_ID SMALLINT NOT NULL,
    PRECIO_POR_VOLUMEN DOUBLE NOT NULL,
    CONSTRAINT PK_PRECIO_MAYOR PRIMARY KEY (ID),
    CONSTRAINT UK_PROD_MEDIDA UNIQUE (PRODUCTO_ID, MEDIDA_AL_MAYOR_ID),
    CONSTRAINT FK_PRECIO_PROD FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTO (ID),
    CONSTRAINT FK_PRECIO_MEDIDA FOREIGN KEY (MEDIDA_AL_MAYOR_ID) REFERENCES MEDIA_AL_MAYOR (ID)
);

-- DescuentoCliente
CREATE TABLE DESCUENTO_CLIENTE (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    CLIENTE_ID INTEGER NOT NULL,
    STOCK_MINIMO INTEGER,
    STOCK_MAXIMO INTEGER,
    PORCENTAJE_DESCUENTO DOUBLE NOT NULL,
    TIPO_DESCUENTO VARCHAR(50),
    CONSTRAINT PK_DESCUENTO_CLIENTE PRIMARY KEY (ID),
    CONSTRAINT FK_DESC_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE (PERSONA_ID)
);

-- CarritoCompras (1-M con Cliente)
CREATE TABLE CARRITO_COMPRAS (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    CLIENTE_ID INTEGER NOT NULL,
    TOTAL_PARCIAL DOUBLE,
    TOTAL_CON_DESCUENTO DOUBLE,
    ESTADO_ID SMALLINT NOT NULL,
    CONSTRAINT PK_CARRITO_COMPRAS PRIMARY KEY (ID),
    CONSTRAINT FK_CARRITO_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE (PERSONA_ID),
    CONSTRAINT FK_CARRITO_ESTADO FOREIGN KEY (ESTADO_ID) REFERENCES ESTADO_CARRITO (ID)
);

-- LineaCarrito (Tabla de asociación M-M entre CarritoCompras y Producto, con atributos)
CREATE TABLE LINEA_CARRITO (
    CARRITO_ID INTEGER NOT NULL,
    PRODUCTO_ID INTEGER NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    PRECIO_VOLUMEN DOUBLE,
    SUBTOTAL DOUBLE,
    CONSTRAINT PK_LINEA_CARRITO PRIMARY KEY (CARRITO_ID, PRODUCTO_ID),
    CONSTRAINT FK_LINEA_CARRITO_CARRITO FOREIGN KEY (CARRITO_ID) REFERENCES CARRITO_COMPRAS (ID),
    CONSTRAINT FK_LINEA_CARRITO_PRODUCTO FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTO (ID)
);

-- OrdenCompra (1-M con Cliente)
CREATE TABLE ORDEN_COMPRA (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    CLIENTE_ID INTEGER NOT NULL,
    FECHA_CREACION DATE NOT NULL,
    TOTAL_PARCIAL DOUBLE,
    TOTAL_FINAL DOUBLE,
    DESCUENTO_TOTAL DOUBLE,
    ESTADO_ID SMALLINT NOT NULL,
    CONSTRAINT PK_ORDEN_COMPRA PRIMARY KEY (ID),
    CONSTRAINT FK_ORDEN_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE (PERSONA_ID),
    CONSTRAINT FK_ORDEN_ESTADO FOREIGN KEY (ESTADO_ID) REFERENCES ESTADO_ORDEN_COMPRA (ID)
);

-- LineaOrdenCompra (Tabla de asociación M-M entre OrdenCompra y Producto, con atributos)
CREATE TABLE LINEA_ORDEN_COMPRA (
    ORDEN_ID INTEGER NOT NULL,
    PRODUCTO_ID INTEGER NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    PRECIO_UNITARIO DOUBLE NOT NULL,
    SUBTOTAL DOUBLE,
    CONSTRAINT PK_LINEA_ORDEN PRIMARY KEY (ORDEN_ID, PRODUCTO_ID),
    CONSTRAINT FK_LINEA_ORDEN_ORDEN FOREIGN KEY (ORDEN_ID) REFERENCES ORDEN_COMPRA (ID),
    CONSTRAINT FK_LINEA_ORDEN_PRODUCTO FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTO (ID)
);

-- DetalleEntrega (Relación 1-1 con OrdenCompra)
CREATE TABLE DETALLE_ENTREGA (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    ORDEN_COMPRA_ID INTEGER UNIQUE NOT NULL, -- UNIQUE y NOT NULL para 1-1
    DESCRIPCION VARCHAR(255),
    FECHA_ENTREGA DATE,
    HORARIO_ENTREGA TIME,
    DIRECCION_ENVIO VARCHAR(255) NOT NULL,
    DISTRITO_ID INTEGER NOT NULL,
    CONSTRAINT PK_DETALLE_ENTREGA PRIMARY KEY (ID),
    CONSTRAINT FK_DETALLE_ORDEN FOREIGN KEY (ORDEN_COMPRA_ID) REFERENCES ORDEN_COMPRA (ID),
    CONSTRAINT FK_DETALLE_DISTRITO FOREIGN KEY (DISTRITO_ID) REFERENCES DISTRITO (ID)
);

-- LineaComprobantePago (Detalle de pago asociado a una Orden de Compra)
CREATE TABLE LINEA_COMPROBANTE_PAGO (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    ORDEN_COMPRA_ID INTEGER NOT NULL,
    CODIGO VARCHAR(50) NOT NULL,
    MONTO_PAGADO DOUBLE NOT NULL,
    CANTIDAD INTEGER,
    SUBTOTAL DOUBLE,
    CONSTRAINT PK_LINEA_COMPROBANTE PRIMARY KEY (ID),
    CONSTRAINT FK_LINEA_PAGO_ORDEN FOREIGN KEY (ORDEN_COMPRA_ID) REFERENCES ORDEN_COMPRA (ID)
);


-----

-- Creación de la tabla MetodoPago (Enum)
CREATE TABLE METODO_PAGO (
    ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_METODO_PAGO PRIMARY KEY (ID)
);

-- Creación de la tabla TipoDescuento (Enum)
CREATE TABLE TIPO_DESCUENTO (
    ID SMALLINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    NOMBRE VARCHAR(50) NOT NULL UNIQUE,
    CONSTRAINT PK_TIPO_DESCUENTO PRIMARY KEY (ID)
);

-- Creación de la tabla ComprobantePago (Cabecera)
CREATE TABLE COMPROBANTE_PAGO (
    ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    ORDEN_COMPRA_ID INTEGER NOT NULL UNIQUE, -- 1-1 con OrdenCompra
    FECHA_EMISION DATE,
    RUC VARCHAR(15),
    SUBTOTAL_SIN_IMPUESTOS DOUBLE,
    IMPUESTOS DOUBLE,
    TOTAL_FINAL DOUBLE NOT NULL,
    METODO_PAGO_ID SMALLINT NOT NULL,
    CONSTRAINT PK_COMPROBANTE_PAGO PRIMARY KEY (ID),
    CONSTRAINT FK_COMPROBANTE_ORDEN FOREIGN KEY (ORDEN_COMPRA_ID) REFERENCES ORDEN_COMPRA (ID),
    CONSTRAINT FK_COMPROBANTE_METODO FOREIGN KEY (METODO_PAGO_ID) REFERENCES METODO_PAGO (ID)
);

-- ********************************************
-- MODIFICACIONES (Requiere ALTER TABLE)
-- ********************************************

-- Paso 1: Cambiar la clave foránea en LINEA_COMPROBANTE_PAGO
-- (Nota: Esto asume que no hay datos en la tabla, si los hay, primero debe dropear la FK)

-- Eliminar la FK antigua a OrdenCompra (si existía)
-- ALTER TABLE LINEA_COMPROBANTE_PAGO DROP CONSTRAINT FK_LINEA_PAGO_ORDEN;

-- Añadir la FK a la nueva tabla COMPROBANTE_PAGO
ALTER TABLE LINEA_COMPROBANTE_PAGO
    ADD COLUMN COMPROBANTE_PAGO_ID INTEGER NOT NULL DEFAULT 0; -- Columna temporal para la FK

ALTER TABLE LINEA_COMPROBANTE_PAGO
    ADD CONSTRAINT FK_LINEA_PAGO_COMPROBANTE
    FOREIGN KEY (COMPROBANTE_PAGO_ID)
    REFERENCES COMPROBANTE_PAGO (ID);

-- (Opcional, si OrdenCompra_ID ya no se usa como FK)
-- ALTER TABLE LINEA_COMPROBANTE_PAGO DROP COLUMN ORDEN_COMPRA_ID;


-- Paso 2: Cambiar la columna 'TIPO_DESCUENTO' en DESCUENTO_CLIENTE para que sea una FK

-- Eliminar la columna String (VARCHAR) antigua
-- ALTER TABLE DESCUENTO_CLIENTE DROP COLUMN TIPO_DESCUENTO;

-- Añadir la nueva columna de clave foránea
ALTER TABLE DESCUENTO_CLIENTE
    ADD COLUMN TIPO_DESCUENTO_ID SMALLINT;

-- Establecer la clave foránea
ALTER TABLE DESCUENTO_CLIENTE
    ADD CONSTRAINT FK_DESCUENTO_TIPO
    FOREIGN KEY (TIPO_DESCUENTO_ID)
    REFERENCES TIPO_DESCUENTO (ID);